
# You can use this file to easily send requests to your API.
# Prerequisite: humao.rest-client Vscode plugin (already present on codespace)
# High-level overview of REST API concepts used here: https://www.packtpub.com/en-us/learning/how-to-tutorials/what-are-rest-verbs-and-status-codes-tutorial?srsltid=AfmBOoppDqtkhRxj5BLZONRZFzRDmh6eP-xyTo6H4OuEHYuVbrg1d4Dm


# Requests for API endpoints of the sample project:

### Hello world endpoint: get response "Hello, Stranger!"
GET http://localhost:8080/hello-world

### Hello world with a request param passed.
# When sending the request it will ask you for the name
# hitting enter will avoid passing the param, and do the default behaviour above
# @prompt name The name to display in response
GET http://localhost:8080/hello-world
    ?name={{name}}

### Save a greeting to database
@postGreetingId = 1001
@postGreetingContent = Hello!
POST http://localhost:8080/greetings
Content-Type: application/json

{
    "id": "{{postGreetingId}}",
    "content": "{{postGreetingContent}}"
}

### Get all greetings
GET http://localhost:8080/greetings

### Get info for greeting with given content
# @prompt content Greeting content to look for, defaults to "Overview"
GET http://localhost:8080/info
    ?title={{content}}

### Update an existing greeting
@putGreetingId = 1001
@putGreetingContent = Hello again!
PUT http://localhost:8080/greetings/{{putGreetingId}}
Content-Type: application/json

{
    "content": "{{putGreetingContent}}"
}

### Delete greeting
@deleteGreetingId = 1001
DELETE http://localhost:8080/greetings/{{deleteGreetingId}}


# TODO add requests for your own endpoints!

### Get all parties
GET http://localhost:8080/parties

GET http://localhost:8080/parties/{id}

### Get all locations
GET http://localhost:8080/locations

### Filter locations by rating (minimum rating)
# @prompt minRating Introdu rating-ul minim
GET http://localhost:8080/locations/filter/rating?minRating={{minRating}}

### Filter locations by price (maximum price)
# @prompt maxPrice Introdu prețul maxim
GET http://localhost:8080/locations/filter/price?maxPrice={{maxPrice}}

### Filter locations by discount points (maximum required points)
# @prompt maxPoints Introdu numărul maxim de puncte de discount
GET http://localhost:8080/locations/filter/discount?maxPoints={{maxPoints}}

### Obține toate produsele alimentare
GET http://localhost:8080/foods

### Obține alimentele cu rating mai mare sau egal cu o valoare dată
# @prompt minRating Introdu rating-ul minim
GET http://localhost:8080/foods/filter/rating?minRating={{minRating}}

### Obține alimentele cu preț mai mic sau egal cu o valoare dată
# @prompt maxPrice Introdu prețul maxim
GET http://localhost:8080/foods/filter/price?maxPrice={{maxPrice}}

### Obține alimentele care necesită un număr de puncte de discount mai mic sau egal cu o valoare dată
# @prompt maxPoints Introdu numărul maxim de puncte de discount
GET http://localhost:8080/foods/filter/discount?maxPoints={{maxPoints}}


### Adaugă un produs alimentar la o petrecere
# @prompt partyId Introdu ID-ul petrecerii
# @prompt foodId Introdu ID-ul produsului alimentar
POST http://localhost:8080/parties/{{partyId}}/foods/{{foodId}}
Content-Type: application/json

### Adaugă un produs alimentar la o petrecere
# @prompt partyId Introdu ID-ul petrecerii
# @prompt locationId Introdu ID-ul produsului alimentar
POST http://localhost:8080/parties/{{partyId}}/location/{{locationId}}
Content-Type: application/json
